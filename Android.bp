package {
    default_applicable_licenses: ["external_chromium-libpac_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change filtered out the below license kinds as false-positives:
//   SPDX-license-identifier-GPL-2.0
//   SPDX-license-identifier-LGPL-2.1
// See: http://go/android-license-faq
license {
    name: "external_chromium-libpac_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-MPL",
    ],
    license_text: [
        "LICENSE",
    ],
}

cc_library_shared {
    name: "libpac",

    srcs: [
        "src/proxy_resolver_v8.cc",
        "src/proxy_resolver_v8_wrapper.cc",
        "src/proxy_resolver_js_bindings.cc",
        "src/net_util.cc",
    ],

    cflags: [
        "-Wno-endif-labels",
        "-Wno-import",
        "-Wno-format",
        "-Wno-unused-parameter",
        "-Wno-non-virtual-dtor",
        "-Werror",
    ],

    export_include_dirs: ["includes"],
    local_include_dirs: ["src"],

    static_libs: ["libv8"],

    shared_libs: [
        "liblog",
        "libicuuc",
        "libicui18n",
    ],

    stubs: {
        symbol_file: "libpac.map.txt",
        versions: [
            "1",
        ],
    },
    apex_available: [
        "com.android.i18n",
    ],
    sanitize: {
        cfi: true,
    },
}
